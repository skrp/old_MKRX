###################
# Anarchist Archive

# https://ibin.co/38jDMZqbLlBS.jpg
# https://drive.google.com/open?id=0B9G8ShajIbYfRGNHakVkdXg5MTA

[1 - 4] : SICC PROCESS
----------------------
  https://github.com/skrp/SICC
[a - h] : MKRX TOOLSET
----------------------
a_SCRUB.pl - verifies the file to its sha
b_CHKMETA.pl - confirms uniq file has metadata
c_UNIQ.pl - checks sha against archive
d_SHA.pl - recursive sha extraction
e_POP.pl - use list to populate dump
f_INDEX.pl - create meta masterlists
g_HASH.pl - create hash files from meta
h_FILT.pl - terminal interface *****************

###################
# SUMMARY
Preserving more than 11+ Million
Unique collections of data

Each file stored as its $sha
Metadata is stored as 'g'$sha

ZFS over BSD
SICC Implementation:

Files are split into blocks
Named after the sha256sum

All files in one directory
All metadata in another directory

This isolation of metadata from data
Allows for public gibberish
To be private information
Via SICC_QUI files

#############
# RAIDZ3 POOL
Standard Blocks 
Allow for associative-compression
Across a raid at third-free-parity
raidz3 15 wide

#################
# EXTERNAL DRIVES
Random Blocks
Allow for dense obfuscation








##########################
(( Protocol-Independent ))
offical: UDP
access - http ftp sh

initiate - kripkey request
server - decrypts request

pop @valid, $if_success;


File Read Server 0550
  GROUP ACCESS
File Post Server 0330
  GROUP ACCESS
File G Server 0500
  USER ACCESS
